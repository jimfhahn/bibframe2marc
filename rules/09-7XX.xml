<?xml version='1.0'?>
<rules xmlns="http://www.loc.gov/bf2marc"
       xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
       xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
       xmlns:bf="http://id.loc.gov/ontologies/bibframe/"
       xmlns:bflc="http://id.loc.gov/ontologies/bflc/"
       xmlns:madsrdf="http://www.loc.gov/mads/rdf/v1#"
       xmlns:marc="http://www.loc.gov/MARC21/slim"
       xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

  <!-- added entries -->
  <select xpath="bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution'])] |
                 bf:Work/bf:relatedTo[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Work[bf:contribution and not(bf:hasInstance)] |
                 bf:Work/bf:hasPart[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Work[bf:contribution] |
                 //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution'])] |
                 //bf:Item/bf:relatedTo[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Work[bf:contribution and not(bf:hasInstance)] |
                 //bf:Item/bf:hasPart[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Work[bf:contribution]">
    <var name="vScriptSubtag">
      <transform>
        <xsl:choose>
          <xsl:when test="local-name()='Work'">
            <xsl:call-template name="tScriptCode">
              <xsl:with-param name="pXmlLang" select="rdfs:label/@xml:lang"/>
            </xsl:call-template>
          </xsl:when>
          <xsl:otherwise>
            <xsl:call-template name="tScriptCode">
              <xsl:with-param name="pXmlLang" select="bf:agent/*/rdfs:label/@xml:lang"/>
            </xsl:call-template>
          </xsl:otherwise>
        </xsl:choose>
      </transform>
    </var>
    <switch>
      <case test="$vScriptSubtag='' or translate($vScriptSubtag,$upper,$lower)=translate($pCatScript,$upper,$lower)">
        <switch>
          <!-- 710 -->
          <case test="bf:agent/*[local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or
                      local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or
                      local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']] or

bf:contribution/*/bf:agent/*[local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or
local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or
local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']]">
            <df tag="710">
              <ind1 default="2">
                <switch>
                  <case test="bf:agent/*[local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']] or
                              bf:contribution/*/bf:agent/*[local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']]">1</case>
                </switch>
              </ind1>
              <ind2 default=" ">
                <switch>
                  <case test="local-name(parent::*)='hasPart'">2</case>
                </switch>
              </ind2>
              <sf code="3" chopPunct="true" repeatable="false">
                <select xpath="bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
              </sf>
              <!-- seem to have to hack this to get a match on @rdf:about attribute? -->
              <transform>
                <xsl:variable name="vNodeUri" select="@rdf:about"/>
                <xsl:for-each select="../../bflc:relationship/bflc:Relationship[bf:relatedTo/@rdf:resource=$vNodeUri]/bflc:relation/bflc:Relation/rdfs:label">
                  <marc:subfield code="i">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="."/>
                    </xsl:call-template>
                  </marc:subfield>
                </xsl:for-each>
              </transform>

              <!-- name subfields -->
              <select xpath="bf:agent/* | bf:contribution/*/bf:agent/*">
                <sf code="a" chopPunct="true" repeatable="false">
                  <switch>
                    <case test="madsrdf:elementList">
                      <select xpath="madsrdf:elementList/*[1]/madsrdf:elementValue"/>
                    </case>
                    <case test="madsrdf:authoritativeLabel"><select xpath="madsrdf:authoritativeLabel"/></case>
                    <case test="default"><select xpath="rdfs:label"/></case>
                  </switch>
                </sf>
                <sf code="b" chopPunct="true">
                  <select xpath="madsrdf:elementList/*[position() &gt; 1]/madsrdf:elementValue"/>
                </sf>
                <sf code="e" chopPunct="true">
                  <select xpath="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                    <switch>
                      <case test="madsrdf:authoritativeLabel"><select xpath="madsrdf:authoritativeLabel"/></case>
                      <case test="default"><select xpath="rdfs:label"/></case>
                    </switch>
                  </select>
                </sf>
                <!-- nac $u -->
                <sf code="4">
                  <select xpath="../../bf:role/*[madsrdf:code or bf:code]">
                    <switch>
                      <case test="madsrdf:code">
                        <select xpath="madsrdf:code"/>
                      </case>
                      <case test="default"><select xpath="bf:code"/></case>
                    </switch>
                  </select>
                </sf>
                <sf code="4">
                  <select xpath="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource"/>
                </sf>
                <sf code="0"><select xpath="@rdf:about[not(contains(.,'example.org'))]"/></sf>
                <sf code="0">
                  <select xpath="bf:identifiedBy/bf:Identifier">
                    <transform>
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''"><xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/></xsl:when>
                        <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
                      </xsl:choose>
                    </transform>
                  </select>
                </sf>
              </select>

              <!-- title subfields -->
              <sf code="t" chopPunct="true" repeatable="false">
                <select xpath="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))]">
                  <switch>
                    <case test="bf:mainTitle"><select xpath="bf:mainTitle"/></case>
                    <case test="default"><select xpath="rdfs:label"/></case>
                  </switch>
                </select>
              </sf>
              <sf code="d" chopPunct="true"><select xpath="bf:legalDate"/></sf>
              <sf code="f" chopPunct="true" repeatable="false"><select xpath="bf:originDate"/></sf>
              <sf code="h" chopPunct="true" repeatable="false">
                <select xpath="bf:genreForm/bf:GenreForm">
                  <switch>
                    <case test="madsrdf:authoritativeLabel"><select xpath="madsrdf:authoritativeLabel"/></case>
                    <case test="default"><select xpath="rdfs:label"/></case>
                  </switch>
                </select>
              </sf>
              <sf code="k" chopPunct="true"><select xpath="bf:natureOfContent"/></sf>
              <!-- language is going to be a problem -->
              <sf code="l" chopPunct="true" repeatable="false">
                <select xpath="bf:language/*/rdfs:label|bf:language/*/madsrdf:authoritativeLabel"/>
              </sf>
              <sf code="m" chopPunct="true"><select xpath="bf:musicMedium/bf:MusicMedium/rdfs:label"/></sf>
              <sf code="n" chopPunct="true"><select xpath="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partNumber"/></sf>
              <sf code="p" chopPunct="true"><select xpath="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partName"/></sf>
              <sf code="r" chopPunct="true" repeatable="false"><select xpath="bf:musicKey"/></sf>
              <sf code="s" chopPunct="true"><select xpath="bf:version"/></sf>
              <sf code="0"><select xpath="@rdf:about[not(contains(.,'example.org'))]"/></sf>
              <sf code="0">
                <select xpath="bf:identifiedBy/bf:Identifier">
                  <transform>
                    <xsl:variable name="vIdType">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                      </xsl:call-template>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vIdType != ''"><xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/></xsl:when>
                      <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
                    </xsl:choose>
                  </transform>
                </select>
              </sf>
              <sf code="2" repeatable="false">
                <select xpath="bf:source/bf:Source/bf:code|*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code"/>
              </sf>
              <sf code="5" repeatable="false">
                <select xpath="bflc:applicableInstitution/*/bf:code"/>
              </sf>
            </df>
          </case>

          <!-- 711 -->
          <case test="bf:agent/*[local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or
                      local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']] or

bf:contribution/*/bf:agent/*[local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or
local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']]">
            <df tag="711">
              <ind1 default="2"/>
              <ind2 default=" ">
                <switch>
                  <case test="local-name(parent::*)='hasPart'">2</case>
                </switch>
              </ind2>
              <sf code="3" chopPunct="true" repeatable="false">
                <select xpath="bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
              </sf>
              <!-- seem to have to hack this to get a match on @rdf:about attribute? -->
              <transform>
                <xsl:variable name="vNodeUri" select="@rdf:about"/>
                <xsl:for-each select="../../bflc:relationship/bflc:Relationship[bf:relatedTo/@rdf:resource=$vNodeUri]/bflc:relation/bflc:Relation/rdfs:label">
                  <marc:subfield code="i">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="."/>
                    </xsl:call-template>
                  </marc:subfield>
                </xsl:for-each>
              </transform>

              <!-- name subfields -->
              <select xpath="bf:agent/* | bf:contribution/*/bf:agent/*">
                <sf code="a" chopPunct="true" repeatable="false">
                  <switch>
                    <case test="madsrdf:elementList">
                      <select xpath="madsrdf:elementList/*[1]/madsrdf:elementValue"/>
                    </case>
                    <case test="madsrdf:authoritativeLabel"><select xpath="madsrdf:authoritativeLabel"/></case>
                    <case test="default"><select xpath="rdfs:label"/></case>
                  </switch>
                </sf>
                <sf code="c" chopPunct="true">
                  <select xpath="madsrdf:elementList/*[local-name()='GeographicElement' and position() &gt; 1]/madsrdf:elementValue"/>
                </sf>
                <sf code="q" chopPunct="true">
                  <select xpath="madsrdf:elementList/*[local-name()='NameElement' and position() &gt; 1]/madsrdf:elementValue"/>
                </sf>
                <sf code="j" chopPunct="true">
                  <select xpath="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                    <switch>
                      <case test="madsrdf:authoritativeLabel"><select xpath="madsrdf:authoritativeLabel"/></case>
                      <case test="default"><select xpath="rdfs:label"/></case>
                    </switch>
                  </select>
                </sf>
                <!-- nac $u -->
                <sf code="4">
                  <select xpath="../../bf:role/*[madsrdf:code or bf:code]">
                    <switch>
                      <case test="madsrdf:code">
                        <select xpath="madsrdf:code"/>
                      </case>
                      <case test="default"><select xpath="bf:code"/></case>
                    </switch>
                  </select>
                </sf>
                <sf code="4">
                  <select xpath="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource"/>
                </sf>
                <sf code="0"><select xpath="@rdf:about[not(contains(.,'example.org'))]"/></sf>
                <sf code="0">
                  <select xpath="bf:identifiedBy/bf:Identifier">
                    <transform>
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''"><xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/></xsl:when>
                        <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
                      </xsl:choose>
                    </transform>
                  </select>
                </sf>
              </select>

              <!-- title subfields -->
              <sf code="t" chopPunct="true" repeatable="false">
                <select xpath="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))]">
                  <switch>
                    <case test="bf:mainTitle"><select xpath="bf:mainTitle"/></case>
                    <case test="default"><select xpath="rdfs:label"/></case>
                  </switch>
                </select>
              </sf>
              <sf code="d" chopPunct="true"><select xpath="bf:legalDate"/></sf>
              <sf code="f" chopPunct="true" repeatable="false"><select xpath="bf:originDate"/></sf>
              <sf code="h" chopPunct="true" repeatable="false">
                <select xpath="bf:genreForm/bf:GenreForm">
                  <switch>
                    <case test="madsrdf:authoritativeLabel"><select xpath="madsrdf:authoritativeLabel"/></case>
                    <case test="default"><select xpath="rdfs:label"/></case>
                  </switch>
                </select>
              </sf>
              <sf code="k" chopPunct="true"><select xpath="bf:natureOfContent"/></sf>
              <!-- language is going to be a problem -->
              <sf code="l" chopPunct="true" repeatable="false">
                <select xpath="bf:language/*/rdfs:label|bf:language/*/madsrdf:authoritativeLabel"/>
              </sf>
              <sf code="m" chopPunct="true"><select xpath="bf:musicMedium/bf:MusicMedium/rdfs:label"/></sf>
              <sf code="n" chopPunct="true"><select xpath="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partNumber"/></sf>
              <sf code="p" chopPunct="true"><select xpath="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partName"/></sf>
              <sf code="r" chopPunct="true" repeatable="false"><select xpath="bf:musicKey"/></sf>
              <sf code="s" chopPunct="true"><select xpath="bf:version"/></sf>
              <sf code="0"><select xpath="@rdf:about[not(contains(.,'example.org'))]"/></sf>
              <sf code="0">
                <select xpath="bf:identifiedBy/bf:Identifier">
                  <transform>
                    <xsl:variable name="vIdType">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                      </xsl:call-template>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vIdType != ''"><xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/></xsl:when>
                      <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
                    </xsl:choose>
                  </transform>
                </select>
              </sf>
              <sf code="2" chopPunct="true" repeatable="false">
                <select xpath="bf:source/bf:Source/bf:code|*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code"/>
              </sf>
              <sf code="5" repeatable="false">
                <select xpath="bflc:applicableInstitution/*/bf:code"/>
              </sf>
            </df>
          </case>

          <!-- 700 -->
          <case test="bf:agent/*[
                      local-name()='PersonalName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#PersonalName'] or
                      local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName'] or
                      local-name()='Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person'] or
                      local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family']
                      ] or
                      bf:contribution/*/bf:agent/*[
                      local-name()='PersonalName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#PersonalName'] or
                      local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName'] or
                      local-name()='Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person'] or
                      local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family']
                      ]">
            <df tag="700">
              <ind1 default="1">
                <switch>
                  <case test="bf:agent/*[local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family'] or local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName']] or
                              bf:contribution/*/bf:agent/*[local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family'] or local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName']]">3</case>
                </switch>
              </ind1>
              <ind2 default=" ">
                <switch>
                  <case test="local-name(parent::*)='hasPart'">2</case>
                </switch>
              </ind2>
              <sf code="3" chopPunct="true" repeatable="false">
                <select xpath="bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
              </sf>
              <!-- seem to have to hack this to get a match on @rdf:about attribute? -->
              <transform>
                <xsl:variable name="vNodeUri" select="@rdf:about"/>
                <xsl:for-each select="../../bflc:relationship/bflc:Relationship[bf:relatedTo/@rdf:resource=$vNodeUri]/bflc:relation/bflc:Relation/rdfs:label">
                  <marc:subfield code="i">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="."/>
                    </xsl:call-template>
                  </marc:subfield>
                </xsl:for-each>
              </transform>

              <!-- name subfields -->
              <select xpath="bf:agent/* | bf:contribution/*/bf:agent/*">
                <sf code="a" chopPunct="true" repeatable="false">
                  <switch>
                    <case test="madsrdf:elementList/madsrdf:FullNameElement/madsrdf:elementValue">
                      <select xpath="madsrdf:elementList/madsrdf:FullNameElement/madsrdf:elementValue[1]"/>
                    </case>
                    <case test="madsrdf:authoritativeLabel"><select xpath="madsrdf:authoritativeLabel"/></case>
                    <case test="default"><select xpath="rdfs:label"/></case>
                  </switch>
                </sf>
                <sf code="c" chopPunct="true">
                  <select xpath="madsrdf:elementList/madsrdf:TermsOfAddressNameElement/madsrdf:elementValue"/>
                </sf>
                <sf code="d" chopPunct="true" repeatable="false">
                  <select xpath="madsrdf:elementList/madsrdf:DateNameElement/madsrdf:elementValue"/>
                </sf>
                <sf code="e" chopPunct="true">
                  <select xpath="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                    <switch>
                      <case test="madsrdf:authoritativeLabel"><select xpath="madsrdf:authoritativeLabel"/></case>
                      <case test="default"><select xpath="rdfs:label"/></case>
                    </switch>
                  </select>
                </sf>
                <sf code="q" chopPunct="true" repeatable="false"><select xpath="madsrdf:fullerName/*/rdfs:label"/></sf>
                <sf code="4">
                  <select xpath="../../bf:role/*[madsrdf:code or bf:code]">
                    <switch>
                      <case test="madsrdf:code">
                        <select xpath="madsrdf:code"/>
                      </case>
                      <case test="default"><select xpath="bf:code"/></case>
                    </switch>
                  </select>
                </sf>
                <sf code="4">
                  <select xpath="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource"/>
                </sf>
                <sf code="0"><select xpath="@rdf:about[not(contains(.,'example.org'))]"/></sf>
                <sf code="0">
                  <select xpath="bf:identifiedBy/bf:Identifier">
                    <transform>
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''"><xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/></xsl:when>
                        <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
                      </xsl:choose>
                    </transform>
                  </select>
                </sf>
              </select>

              <!-- title subfields -->
              <sf code="t" chopPunct="true" repeatable="false">
                <select xpath="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))]">
                  <switch>
                    <case test="bf:mainTitle"><select xpath="bf:mainTitle"/></case>
                    <case test="default"><select xpath="rdfs:label"/></case>
                  </switch>
                </select>
              </sf>
              <sf code="f" chopPunct="true" repeatable="false"><select xpath="bf:originDate"/></sf>
              <sf code="h" chopPunct="true" repeatable="false">
                <select xpath="bf:genreForm/bf:GenreForm">
                  <switch>
                    <case test="madsrdf:authoritativeLabel"><select xpath="madsrdf:authoritativeLabel"/></case>
                    <case test="default"><select xpath="rdfs:label"/></case>
                  </switch>
                </select>
              </sf>
              <sf code="k" chopPunct="true"><select xpath="bf:natureOfContent"/></sf>
              <!-- language is going to be a problem -->
              <sf code="l" chopPunct="true" repeatable="false">
                <select xpath="bf:language/*/rdfs:label|bf:language/*/madsrdf:authoritativeLabel"/>
              </sf>
              <sf code="m" chopPunct="true"><select xpath="bf:musicMedium/bf:MusicMedium/rdfs:label"/></sf>
              <sf code="n" chopPunct="true"><select xpath="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partNumber"/></sf>
              <sf code="p" chopPunct="true"><select xpath="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partName"/></sf>
              <sf code="r" chopPunct="true" repeatable="false"><select xpath="bf:musicKey"/></sf>
              <sf code="s" chopPunct="true"><select xpath="bf:version"/></sf>
              <sf code="0"><select xpath="@rdf:about[not(contains(.,'example.org'))]"/></sf>
              <sf code="0">
                <select xpath="bf:identifiedBy/bf:Identifier">
                  <transform>
                    <xsl:variable name="vIdType">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                      </xsl:call-template>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vIdType != ''"><xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/></xsl:when>
                      <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
                    </xsl:choose>
                  </transform>
                </select>
              </sf>
              <sf code="2" repeatable="false">
                <select xpath="bf:source/bf:Source/bf:code|*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code"/>
              </sf>
              <sf code="5" repeatable="false">
                <select xpath="bflc:applicableInstitution/*/bf:code"/>
              </sf>
            </df>
          </case>

          <!-- fallback to 720 for unclassed names -->
          <!-- any attached title info will be lost -->
          <case test="bf:agent">
            <df tag="720">
              <ind1 default=" "/>
              <ind2 default=" "/>
              <sf code="a" chopPunct="true" repeatable="false">
                <select xpath="bf:agent/*/rdfs:label"/>
              </sf>
              <sf code="e" chopPunct="true">
                <select xpath="bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                  <switch>
                    <case test="madsrdf:authoritativeLabel"><select xpath="madsrdf:authoritativeLabel"/></case>
                    <case test="default"><select xpath="rdfs:label"/></case>
                  </switch>
                </select>
              </sf>
              <sf code="4">
                <select xpath="bf:role/*[madsrdf:code or bf:code]">
                  <switch>
                    <case test="madsrdf:code">
                      <select xpath="madsrdf:code"/>
                    </case>
                    <case test="default"><select xpath="bf:code"/></case>
                  </switch>
                </select>
              </sf>
              <sf code="4">
                <select xpath="bf:role/bf:Role/@rdf:about|bf:role/@rdf:resource"/>
              </sf>
            </df>
          </case>
        </switch>
      </case>
    </switch>
  </select>

  <df tag="730" lang-xpath="rdfs:label" lang-prefer="transliterated">
    <context xpath="bf:Work/bf:relatedTo[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Work[not(bf:contribution or bf:hasInstance)] |
                    //bf:Item/bf:relatedTo[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Work[not(bf:contribution or bf:hasInstance)]">
      <ind1 default="0">
        <switch>
          <case test="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:titleSortKey and (string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:titleSortKey) &lt; string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/rdfs:label))">
            <transform>
              <xsl:value-of select="string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/rdfs:label) - string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:titleSortKey)"/>
            </transform>
          </case>
        </switch>
      </ind1>
      <ind2 default=" ">
        <switch>
          <case test="local-name(parent::*)='hasPart'">2</case>
        </switch>
      </ind2>
      <sf code="3" chopPunct="true" repeatable="false">
        <select xpath="bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
      </sf>
      <!-- seem to have to hack this to get a match on @rdf:about attribute? -->
      <transform>
        <xsl:variable name="vNodeUri" select="@rdf:about"/>
        <xsl:for-each select="../../bflc:relationship/bflc:Relationship[bf:relatedTo/@rdf:resource=$vNodeUri or bf:relatedTo=$vNodeUri]/bflc:relation/bflc:Relation/rdfs:label">
          <marc:subfield code="i">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="."/>
            </xsl:call-template>
          </marc:subfield>
        </xsl:for-each>
      </transform>
      <sf code="a" chopPunct="true" repeatable="false">
        <select xpath="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))]">
          <switch>
            <case test="bf:mainTitle"><select xpath="bf:mainTitle"/></case>
            <case test="default"><select xpath="rdfs:label"/></case>
          </switch>
        </select>
      </sf>
      <sf code="d" chopPunct="true"><select xpath="bf:legalDate"/></sf>
      <sf code="f" chopPunct="true" repeatable="false"><select xpath="bf:originDate"/></sf>
      <sf code="k" chopPunct="true"><select xpath="bf:natureOfContent"/></sf>
      <!-- language is going to be a problem -->
      <sf code="l" chopPunct="true" repeatable="false">
        <select xpath="bf:language/*/rdfs:label|bf:language/*/madsrdf:authoritativeLabel"/>
      </sf>
      <sf code="m" chopPunct="true"><select xpath="bf:musicMedium/bf:MusicMedium/rdfs:label"/></sf>
      <sf code="n" chopPunct="true"><select xpath="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partNumber"/></sf>
      <sf code="p" chopPunct="true"><select xpath="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partName"/></sf>
      <sf code="r" chopPunct="true" repeatable="false"><select xpath="bf:musicKey"/></sf>
      <sf code="s" chopPunct="true"><select xpath="bf:version"/></sf>
      <sf code="0"><select xpath="@rdf:about[not(contains(.,'example.org'))]"/></sf>
      <sf code="0"><select xpath="@rdf:about[not(contains(.,'example.org'))]"/></sf>
      <sf code="0">
        <select xpath="bf:identifiedBy/bf:Identifier">
          <transform>
            <xsl:variable name="vIdType">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vIdType != ''"><xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/></xsl:when>
              <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
            </xsl:choose>
          </transform>
        </select>
      </sf>
      <sf code="2" repeatable="false">
        <select xpath="bf:source/bf:Source/bf:code|*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code"/>
      </sf>
      <sf code="5" repeatable="false">
        <select xpath="bflc:applicableInstitution/*/bf:code"/>
      </sf>
    </context>
  </df>

  <df tag="752" lang-xpath="rdfs:label" lang-prefer="transliterated">
    <context xpath="bf:Work/bf:place/*[local-name()='HierarchicalGeographic' or rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#HierarchicalGeographic']">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <sf code="0"><select xpath="@rdf:about[not(contains(.,'example.org'))]"/></sf>
      <sf code="0">
        <select xpath="bf:identifiedBy/bf:Identifier">
          <transform>
            <xsl:variable name="vIdType">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vIdType != ''"><xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/></xsl:when>
              <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
            </xsl:choose>
          </transform>
        </select>
      </sf>
      <select xpath="madsrdf:componentList/*">
        <switch>
          <case test="local-name()='Country' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Country']">
            <sf code="a" chopPunct="true">
              <switch>
                <case test="madsrdf:authoritativeLabel"><select xpath="madsrdf:authoritativeLabel"/></case>
                <case test="default"><select xpath="rdfs:label"/></case>
              </switch>
            </sf>
          </case>
          <case test="local-name()='State' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#State']">
            <sf code="b" chopPunct="true">
              <switch>
                <case test="madsrdf:authoritativeLabel"><select xpath="madsrdf:authoritativeLabel"/></case>
                <case test="default"><select xpath="rdfs:label"/></case>
              </switch>
            </sf>
          </case>
          <case test="local-name()='County' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#County']">
            <sf code="c" chopPunct="true">
              <switch>
                <case test="madsrdf:authoritativeLabel"><select xpath="madsrdf:authoritativeLabel"/></case>
                <case test="default"><select xpath="rdfs:label"/></case>
              </switch>
            </sf>
          </case>
          <case test="local-name()='City' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#City']">
            <sf code="d" chopPunct="true">
              <switch>
                <case test="madsrdf:authoritativeLabel"><select xpath="madsrdf:authoritativeLabel"/></case>
                <case test="default"><select xpath="rdfs:label"/></case>
              </switch>
            </sf>
          </case>
          <case test="local-name()='CitySection' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CitySection']">
            <sf code="f" chopPunct="true">
              <switch>
                <case test="madsrdf:authoritativeLabel"><select xpath="madsrdf:authoritativeLabel"/></case>
                <case test="default"><select xpath="rdfs:label"/></case>
              </switch>
            </sf>
          </case>
          <case test="local-name()='Region' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Region']">
            <sf code="g" chopPunct="true">
              <switch>
                <case test="madsrdf:authoritativeLabel"><select xpath="madsrdf:authoritativeLabel"/></case>
                <case test="default"><select xpath="rdfs:label"/></case>
              </switch>
            </sf>
          </case>
          <case test="local-name()='ExtraterrestrialArea' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ExtraterrestrialArea']">
            <sf code="h" chopPunct="true">
              <switch>
                <case test="madsrdf:authoritativeLabel"><select xpath="madsrdf:authoritativeLabel"/></case>
                <case test="default"><select xpath="rdfs:label"/></case>
              </switch>
            </sf>
          </case>
        </switch>
        <sf code="0"><select xpath="@rdf:about[not(contains(.,'example.org'))]"/></sf>
        <sf code="0">
          <select xpath="bf:identifiedBy/bf:Identifier">
            <transform>
              <xsl:variable name="vIdType">
                <xsl:call-template name="tChopPunct">
                  <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                </xsl:call-template>
              </xsl:variable>
              <xsl:choose>
                <xsl:when test="$vIdType != ''"><xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/></xsl:when>
                <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
              </xsl:choose>
            </transform>
          </select>
        </sf>
      </select>
      <sf code="e" chopPunct="true">
        <select xpath="bflc:relationship/bflc:Relationship/bflc:relation/*[rdfs:label or madsrdf:authoritativeLabel]">
          <switch>
            <case test="madsrdf:authoritativeLabel"><select xpath="madsrdf:authoritativeLabel"/></case>
            <case test="default"><select xpath="rdfs:label"/></case>
          </switch>
        </select>
      </sf>
      <sf code="4">
        <select xpath="bflc:relationship/bflc:Relationship/bflc:relation/*[madsrdf:code or bf:code]">
          <switch>
            <case test="madsrdf:code">
              <select xpath="madsrdf:code"/>
            </case>
            <case test="default"><select xpath="bf:code"/></case>
          </switch>
        </select>
      </sf>
      <sf code="4">
        <select xpath="bflc:relationship/bflc:Relationship/bflc:relation/*/@rdf:about|bflc:relationship/bflc:Relationship/bflc:relation/@rdf:resource"/>
      </sf>
      <sf code="2" repeatable="false">
        <select xpath="bf:source/bf:Source/bf:code|*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code"/>
      </sf>
    </context>
  </df>

  <df tag="753" lang-xpath="rdfs:label">
    <context xpath="bf:Instance/bf:systemRequirement/*[
                    local-name() = 'MachineModel' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/MachineModel' or
                    local-name() = 'ProgrammingLanguage' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/ProgrammingLanguage' or
                    local-name() = 'OperatingSystem' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/OperatingSystem']">
      <ind1 default=" "/>
      <ind2 default=" "/>
      <switch>
        <case test="local-name() = 'MachineModel' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/MachineModel'">
          <sf code="a" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name() = 'ProgrammingLanguage' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/ProgrammingLanguage'">
          <sf code="b" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
        <case test="local-name() = 'OperatingSystem' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/OperatingSystem'">
          <sf code="c" chopPunct="true"><select xpath="rdfs:label"/></sf>
        </case>
      </switch>
      <sf code="0"><select xpath="@rdf:about[not(contains(.,'example.org'))]"/></sf>
      <sf code="0">
        <select xpath="bf:identifiedBy/bf:Identifier">
          <transform>
            <xsl:variable name="vIdType">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vIdType != ''"><xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/></xsl:when>
              <xsl:otherwise><xsl:value-of select="rdf:value"/></xsl:otherwise>
            </xsl:choose>
          </transform>
        </select>
      </sf>
      <sf code="2" chopPunct="true" repeatable="false">
        <select xpath="bf:source/bf:Source/bf:code"/>
      </sf>
    </context>
  </df>

  <!-- Linking entries -->
  <df tag="$vLinkTagFromWork" lang-xpath="rdfs:label">
    <context xpath="bf:Instance/bf:hasSeries/bf:Work[bf:hasInstance] |
                    bf:Instance/bf:hasSubseries/bf:Work[bf:hasInstance] |
                    bf:Work/bf:translationOf/bf:Work[bf:hasInstance] |
                    bf:Work/bf:translation/bf:Work[bf:hasInstance] |
                    bf:Work/bf:supplement/bf:Work[bf:hasInstance] |
                    bf:Work/bf:supplementTo/bf:Work[bf:hasInstance] |
                    bf:Work/bf:partOf/bf:Work[bf:hasInstance] |
                    bf:Work/bf:hasPart/bf:Work[bf:hasInstance] |
                    bf:Work/bf:otherEdition/bf:Work[bf:hasInstance] |
                    bf:Instance/bf:issuedWith/bf:Work[bf:hasInstance] |
                    bf:Work/bf:continues/bf:Work[bf:hasInstance] |
                    bf:Work/bf:continuesInPart/bf:Work[bf:hasInstance] |
                    bf:Work/bf:precededBy/bf:Work[bf:hasInstance] |
                    bf:Work/bf:mergerOf/bf:Work[bf:hasInstance] |
                    bf:Work/bf:absorbed/bf:Work[bf:hasInstance] |
                    bf:Work/bf:separatedBy/bf:Work[bf:hasInstance] |
                    bf:Work/bf:continuedBy/bf:Work[bf:hasInstance] |
                    bf:Work/bf:continuedInPartBy/bf:Work[bf:hasInstance] |
                    bf:Work/bf:succeededFrom/bf:Work[bf:hasInstance] |
                    bf:Work/bf:absorbedBy/bf:Work[bf:hasInstance] |
                    bf:Work/bf:splitInto/bf:Work[bf:hasInstance] |
                    bf:Work/bf:mergedToForm/bf:Work[bf:hasInstance] |
                    bf:Work/bf:dataSource/bf:Work[bf:hasInstance] |
                    bf:Work/bf:relatedTo/bf:Work[bf:hasInstance]">
      <var name="vLinkTagFromWork">
        <switch>
          <case test="local-name(..)='hasSeries'">760</case>
          <case test="local-name(..)='hasSubseries'">762</case>
          <case test="local-name(..)='translationOf'">765</case>
          <case test="local-name(..)='translation'">767</case>
          <case test="local-name(..)='supplement'">770</case>
          <case test="local-name(..)='supplementTo'">772</case>
          <case test="local-name(..)='partOf'">773</case>
          <case test="local-name(..)='hasPart'">774</case>
          <case test="local-name(..)='otherEdition'">775</case>
          <case test="local-name(..)='issuedWith'">777</case>
          <case test="local-name(..)='continues'">780</case>
          <case test="local-name(..)='continuesInPart'">780</case>
          <case test="local-name(..)='precededBy'">780</case>
          <case test="local-name(..)='mergerOf'">780</case>
          <case test="local-name(..)='absorbed'">780</case>
          <case test="local-name(..)='separatedFrom'">780</case>
          <case test="local-name(..)='continuedBy'">785</case>
          <case test="local-name(..)='continuedInPartBy'">785</case>
          <case test="local-name(..)='succeededBy'">785</case>
          <case test="local-name(..)='absorbedBy'">785</case>
          <case test="local-name(..)='splitInto'">785</case>
          <case test="local-name(..)='mergedToForm'">785</case>
          <case test="local-name(..)='dataSource'">786</case>
          <case test="default">787</case>
        </switch>
      </var>
      <ind1 default="0"/>
      <ind2 default=" ">
        <switch>
          <case test="local-name(parent::*)='continues'">0</case>
          <case test="local-name(parent::*)='continuesInPart'">1</case>
          <case test="local-name(parent::*)='precededBy'">2</case>
          <case test="local-name(parent::*)='mergerOf'">4</case>
          <case test="local-name(parent::*)='absorbed'">5</case>
          <case test="local-name(parent::*)='separatedFrom'">7</case>
          <case test="local-name(parent::*)='continuedBy'">0</case>
          <case test="local-name(parent::*)='continuedInPartBy'">1</case>
          <case test="local-name(parent::*)='succeededBy'">2</case>
          <case test="local-name(parent::*)='absorbedBy'">4</case>
          <case test="local-name(parent::*)='splitInto'">5</case>
          <case test="local-name(parent::*)='mergedToForm'">7</case>
        </switch>
      </ind2>
      <sf code="3" chopPunct="true" repeatable="false">
        <select xpath="bflc:appliesTo/bflc:AppliesTo/rdfs:label"/>
      </sf>
      <sf code="a" chopPunct="true" repeatable="false">
        <select xpath="bf:contribution/*[local-name()='PrimaryContribution' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution']/bf:agent/*/rdfs:label"/>
      </sf>
      <sf code="b" chopPunct="true" repeatable="false">
        <select xpath="bf:hasInstance/bf:Instance/bf:editionStatement"/>
      </sf>
      <sf code="c" chopPunct="true" repeatable="false">
        <select xpath="bf:title/bf:Title/bf:qualifier"/>
      </sf>
      <sf code="d" chopPunct="true" repeatable="false">
        <select xpath="bf:hasInstance/bf:Instance/bf:provisionActivityStatement"/>
      </sf>
      <sf code="e" chopPunct="true" repeatable="false">
        <select xpath="bf:language/*/rdfs:label|bf:language/*/madsrdf:authoritativeLabel"/>
      </sf>
      <sf code="f" chopPunct="true" repeatable="false">
        <select xpath="bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place[@rdf:resource]|
                       bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place[*/@rdf:about]|
                       bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place[*/*[local-name()='code']]|
                       bf:hasInstance/bf:Instance/bf:provisionActivity/*[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ProvisionActivity']/bf:place[@rdf:resource]|
                       bf:hasInstance/bf:Instance/bf:provisionActivity/*[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ProvisionActivity']/bf:place[*/@rdf:about]|
                       bf:hasInstance/bf:Instance/bf:provisionActivity/*[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ProvisionActivity']/bf:place[*/*[local-name()='code']]">
          <switch>
            <case test="*/*[local-name()='code']">
              <select xpath="*/*[local-name()='code']"/>
            </case>
            <case test="*[starts-with(@rdf:about,'http://id.loc.gov/vocabulary/countries/')]">
              <transform><xsl:value-of select="substring-after(*/@rdf:about,'http://id.loc.gov/vocabulary/countries/')"/></transform>
            </case>
            <case test="*[starts-with(@rdf:resource,'http://id.loc.gov/vocabulary/countries/')]">
              <transform><xsl:value-of select="substring-after(@rdf:resource,'http://id.loc.gov/vocabulary/countries/')"/></transform>
            </case>
          </switch>
        </select>
      </sf>
      <sf code="g" chopPunct="true">
        <select xpath="bf:hasInstance/bf:Instance/bf:part"/>
      </sf>
      <sf code="h" chopPunct="true" repeatable="false">
        <select xpath="bf:hasInstance/bf:Instance/bf:extent/bf:Extent/rdfs:label"/>
      </sf>
      <sf code="i" chopPunct="true">
        <select xpath="bflc:relationship/bflc:Relationship/bflc:relation/*[rdfs:label or madsrdf:authoritativeLabel]">
          <switch>
            <case test="madsrdf:authoritativeLabel"><select xpath="madsrdf:authoritativeLabel"/></case>
            <case test="default"><select xpath="rdfs:label"/></case>
          </switch>
        </select>
      </sf>
      <sf code="i">
        <select xpath="bflc:relationship/bflc:Relationship/bflc:relation/*[madsrdf:code or bf:code]">
          <switch>
            <case test="madsrdf:code">
              <select xpath="madsrdf:code"/>
            </case>
            <case test="default"><select xpath="bf:code"/></case>
          </switch>
        </select>
      </sf>
      <sf code="i">
        <select xpath="bflc:relationship/bflc:Relationship/bflc:relation/*/@rdf:about|bflc:relationship/bflc:Relationship/bflc:relation/@rdf:resource"/>
      </sf>
      <sf code="j" chopPunct="true">
        <select xpath="bf:hasInstance/bf:Instance/bf:seriesStatement"/>
      </sf>
      <sf code="n" chopPunct="true">
        <select xpath="bf:note/bf:Note/rdfs:label|bf:hasInstance/bf:Instance/bf:note/bf:Note/rdfs:label"/>
      </sf>
      <switch>
        <case test="bf:title/bf:Title/bf:mainTitle != bf:hasInstance/bf:Instance/bf:title/bf:Title/bf:mainTitle">
          <sf code="s" chopPunct="true" repeatable="false"><select xpath="bf:title/bf:Title/bf:mainTitle"/></sf>
        </case>
      </switch>
      <sf code="t" chopPunct="true" repeatable="false">
        <select xpath="bf:hasInstance/bf:Instance/bf:title/bf:Title/bf:mainTitle"/>
      </sf>
      <select xpath="bf:hasInstance/bf:Instance/bf:identifiedBy/*">
        <switch>
          <case test="local-name()='ReportNumber' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ReportNumber'">
            <sf code="r"><select xpath="rdf:value"/></sf>
          </case>
          <case test="local-name()='Strn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Strn'">
            <sf code="u"><select xpath="rdf:value"/></sf>
          </case>
          <case test="local-name()='Lccn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn'">
            <sf code="w">
              <transform><xsl:value-of select="concat('(DLC)',rdf:value)"/></transform>
            </sf>
          </case>
          <case test="local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn'">
            <sf code="x"><select xpath="rdf:value"/></sf>
          </case>
          <case test="local-name()='Coden' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Coden'">
            <sf code="y"><select xpath="rdf:value"/></sf>
          </case>
          <case test="local-name()='Isbn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isbn'">
            <sf code="z"><select xpath="rdf:value"/></sf>
          </case>
          <case test="default">
            <sf code="w">
              <switch>
                <case test="bf:source/bf:Source/bf:code">
                  <transform>
                    <xsl:variable name="vSource">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                      </xsl:call-template>
                    </xsl:variable>
                    <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/></transform>
                </case>
                <case test="default">
                  <select xpath="rdf:value"/>
                </case>
              </switch>
            </sf>
          </case>
        </switch>
      </select>
    </context>
  </df>

  <!-- Rules for 776 coded with 530 -->

</rules>
